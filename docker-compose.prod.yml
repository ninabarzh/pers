# docker-compose.prod.yml
services:
  typesense:
    build:
      context: .
      dockerfile: backend/Dockerfile.typesense
    environment:
      - TYPESENSE_API_KEY=${PROD_TYPESENSE_API_KEY}
      - TYPESENSE_DATA_DIR=${PROD_TYPESENSE_DATA_DIR}
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8108/health"]
      interval: 15s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.prod
    environment:
      - ENV=production
      - DEBUG=false
      - PYTHONPATH=/app/src
      - PROD_TYPESENSE_API_KEY=${PROD_TYPESENSE_API_KEY}
      - PROD_TYPESENSE_HOST=${PROD_TYPESENSE_HOST}
      - PROD_TYPESENSE_PORT=${PROD_TYPESENSE_PORT}
      - PROD_TYPESENSE_PROTOCOL=${PROD_TYPESENSE_PROTOCOL}
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.prod
    environment:
      - ENV=production
      - BACKEND_URL=https://${PROD_DOMAIN}/api
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'

  nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./nginx/snippets:/etc/nginx/snippets
      - static_volume:/var/www/static
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend

  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    command: renew --webroot -w /var/www/certbot --quiet
    restart: unless-stopped

volumes:
  static_volume:
    driver_opts:
      type: none
      device: /data/static
      o: bind
  certbot_www:
  certbot_conf:

networks:
  default:
    driver: bridge
    name: app-network