# docker-compose.prod.yml
services:
  typesense:
    extends:
      file: docker-compose.yml
      service: typesense
    environment:
      TYPESENSE_API_KEY: ${PROD_TYPESENSE_API_KEY}
      TYPESENSE_DATA_DIR: ${PROD_TYPESENSE_DATA_DIR}
    networks:
      app-network:
        aliases: [typesense]
    volumes:
      - "typesense_data:/data"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

  backend:
    extends:
      file: docker-compose.yml
      service: backend
    build:
      context: ./backend  # Key change
      dockerfile: Dockerfile.prod
    environment:
      PYTHONPATH: ${PROD_BACKEND_PYTHONPATH}
      TYPESENSE_HOST: typesense
      TYPESENSE_PORT: ${PROD_TYPESENSE_PORT:-8108}
      TYPESENSE_API_KEY: ${PROD_TYPESENSE_API_KEY}
      BACKEND_PORT: ${PROD_BACKEND_PORT:-8000}
      TYPESENSE_PROTOCOL: http
    volumes:
      - static_volume:/app/static:rw
      # - ./backend/src:/app/src:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    extends:
      file: docker-compose.yml
      service: frontend
    build:
      context: ./frontend  # Key change
      dockerfile: Dockerfile.prod
    environment:
      PYTHONPATH: ${PROD_FRONTEND_PYTHONPATH}
      FRONTEND_PORT: 8001
    volumes:
      - static_volume:/var/www/static:ro
      # - ./frontend/src:/app/src:ro
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy

  nginx:
    extends:
      file: docker-compose.yml
      service: nginx
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./nginx/snippets:/etc/nginx/snippets
      - static_volume:/var/www/static
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    networks:
      app-network:
        aliases: [${DOMAIN}]
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend

  certbot:
    extends:
      file: docker-compose.yml
      service: certbot
    networks:
      - app-network

volumes:
  typesense_data:
    driver: local
  static_volume:
    driver: local
  certbot_www:
    driver: local
  certbot_conf:
    driver: local

networks:
  app-network:
    driver: bridge
    attachable: true