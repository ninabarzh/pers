# backend/Dockerfile.prod
# Stage 1: Builder
FROM python:3.12-slim AS builder

WORKDIR /app

# Install build dependencies (minimal)
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    gcc python3-dev libpq-dev && \
    rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies with hash checking
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Security checks
RUN find . -name '*.py' -exec chmod 644 {} \; && \
    python -c "import ast; ast.parse(open('src/app/main.py').read())" && \
    echo "Syntax validation passed"

# Stage 2: Runtime
FROM python:3.12-slim

WORKDIR /app

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libpq5 curl && \
    rm -rf /var/lib/apt/lists/*

# Copy virtual environment
COPY --from=builder /opt/venv /opt/venv

# Copy application code (read-only)
COPY --from=builder --chown=1000:1000 /app/src/ ./src/
RUN chmod -R 555 ./src  # Read+execute only

# Non-root user setup
RUN useradd -u 1000 -m myuser -d /app && \
    chown -R myuser:myuser /app

# Environment configuration
ENV PATH="/opt/venv/bin:$PATH" \
    PYTHONPATH="/app/src" \
    PYTHONUNBUFFERED="1" \
    STARTUP_DELAY="10"

USER myuser

HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

CMD ["uvicorn", "src.app.main:app", "--host", "0.0.0.0", "--port", "8000", "--no-access-log"]