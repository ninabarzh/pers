# backend/Dockerfile.prod
# Stage 1: Builder
FROM python:3.12-slim as builder

WORKDIR /app

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc python3-dev && \
    rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv

# Environment configuration
ENV PATH="/opt/venv/bin:$PATH" \
    PYTHONPATH="/app/src:/app" \  # Both paths for flexibility
    STARTUP_DELAY=10

# Verify runtime imports
RUN /opt/venv/bin/python -c "from app.main import app; print('Runtime import successful')"

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY src/ ./src/

# Verify imports work in builder stage
RUN python -c "import sys; print(sys.path); from src.app.main import app; print('App imports successfully')"

# Stage 2: Runtime
FROM python:3.12-slim

WORKDIR /app

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends curl && \
    rm -rf /var/lib/apt/lists/*

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv

# Copy application code with proper permissions
COPY --from=builder --chown=1000:1000 /app/src/ ./src/

# Create non-root user
RUN useradd -u 1000 -m myuser && \
    chown -R myuser:myuser /app

# Environment configuration
ENV PATH="/opt/venv/bin:$PATH" \
    PYTHONPATH="/app" \
    STARTUP_DELAY=10

# Verify runtime imports
RUN /opt/venv/bin/python -c "from src.app.main import app; print('Runtime import successful')"

USER myuser

EXPOSE 8000

CMD ["sh", "-c", "echo \"Waiting ${STARTUP_DELAY}s for dependencies...\"; \
      sleep ${STARTUP_DELAY}; \
      /opt/venv/bin/uvicorn src.app.main:app --host 0.0.0.0 --port 8000"]