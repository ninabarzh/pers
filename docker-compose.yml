# docker-compose.yml
services:
  typesense:
    build:
      context: ./backend
      dockerfile: Dockerfile.typesense
    container_name: typesense-db
    ports:
      - "8108:8108"
    environment:
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - TYPESENSE_DATA_DIR=${TYPESENSE_DATA_DIR}
    volumes:
      - typesense_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8108/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-app
    ports:
      - "${BACKEND_PORT}:8000"
    volumes:
      - ./backend/src:/app/src
    environment:
      - PYTHONPATH=${BACKEND_PYTHONPATH}
      - TYPESENSE_HOST=typesense
      - TYPESENSE_PORT=8108
      - TYPESENSE_PROTOCOL=http
      - TYPESENSE_API_KEY=xyz
    depends_on:
      typesense:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  # Add a service for running tests
  backend-tests:
    profiles: ["test"]
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-tests
    depends_on:
      backend:
        condition: service_healthy
      typesense:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src
      - ./backend/tests:/app/tests
    command: ["./run_tests.sh"]
    environment:
      - TEST_ENV=development
      - DEBUG=true
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-app
    ports:
      - "${FRONTEND_PORT}:8001"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/src/app/templates:/app/src/app/templates
    environment:
      - PYTHONPATH=${FRONTEND_PYTHONPATH}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  frontend-tests:
    profiles: ["test"]
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-tests
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/tests:/app/tests
    command: ["./run_tests.sh"]
    environment:
      - TEST_ENV=development
      - DEBUG=true
    networks:
      - app-network

volumes:
  typesense_data:

networks:
  app-network:
    driver: bridge
