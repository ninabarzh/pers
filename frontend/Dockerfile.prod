# Stage 1: Builder
FROM python:3.12-slim as builder

WORKDIR /app

# Install system dependencies including brotli and gzip
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    brotli \
    gzip \
    gcc \
    python3-dev && \
    rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy and install requirements first (for better caching)
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY src/ /app/src/

# Pre-compress static files
RUN find /app/src/app/static/ -type f \( -name "*.css" -o -name "*.js" -o -name "*.svg" \) \
    -exec gzip -9 -k {} \; \
    -exec brotli -9 -k {} \;

# Stage 2: Runtime
FROM python:3.12-slim

WORKDIR /app

# Install runtime dependencies (brotli for serving pre-compressed files)
RUN apt-get update && \
    apt-get install -y --no-install-recommends brotli && \
    rm -rf /var/lib/apt/lists/*

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv

# Copy application code
COPY --from=builder --chown=1000:1000 /app/src/ /app/src/

# Set up static files
RUN mkdir -p /var/www/static && \
    cp -r /app/src/app/static/* /var/www/static/ && \
    chmod -R 755 /var/www/static

# Create non-root user
RUN useradd -u 1000 -m myuser && \
    chown -R myuser:myuser /app && \
    chown -R myuser:myuser /var/www/static

# Environment configuration
ENV PATH="/opt/venv/bin:$PATH" \
    PYTHONPATH="/app/src"

USER myuser

EXPOSE 8001

CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8001"]