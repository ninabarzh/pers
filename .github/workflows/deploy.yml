# .github/workflows/deploy.yml
name: Deploy to Hetzner

on:
  push:
    branches:
      - main  # Triggers on pushes to main branch

env:
  COMPOSE_FILE: "docker-compose.yml:docker-compose.prod.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      deployments: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Docker Compose
      run: |
        curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose

    - name: Generate production .env
      run: |
        cat <<EOF > .env.prod
        # Production Environment
        ENV=production
        DEBUG=false

        # Typesense Configuration
        PROD_TYPESENSE_API_KEY=${{ secrets.PROD_TYPESENSE_API_KEY }}
        PROD_TYPESENSE_HOST=${{ secrets.PROD_TYPESENSE_HOST }}
        PROD_TYPESENSE_PORT=${{ secrets.PROD_TYPESENSE_PORT }}
        PROD_TYPESENSE_PROTOCOL=${{ secrets.PROD_TYPESENSE_PROTOCOL }}
        PROD_TYPESENSE_DATA_DIR=${{ secrets.PROD_TYPESENSE_DATA_DIR }}

        # Application Configuration
        PROD_BACKEND_PORT=${{ secrets.PROD_BACKEND_PORT }}
        PROD_FRONTEND_PORT=${{ secrets.PROD_FRONTEND_PORT }}
        DOMAIN=${{ secrets.PROD_DOMAIN }}
        EOF

    - name: Build production images
      run: |
        docker-compose -f $COMPOSE_FILE build --no-cache

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.HETZNER_SSH_KEY }}

    - name: Deploy to Hetzner
      run: |
        ssh -o StrictHostKeyChecking=no \
            ${{ secrets.HETZNER_USER }}@${{ secrets.HETZNER_SERVER_IP }} \
            "mkdir -p ~/app && chmod 700 ~/app"
        
        rsync -avz --delete \
              --exclude=.git \
              --exclude=.github \
              -e "ssh -o StrictHostKeyChecking=no" \
              ./ ${{ secrets.HETZNER_USER }}@${{ secrets.HETZNER_SERVER_IP }}:~/app/

        ssh -o StrictHostKeyChecking=no \
            ${{ secrets.HETZNER_USER }}@${{ secrets.HETZNER_SERVER_IP }} \
            "cd ~/app && \
             docker-compose -f $COMPOSE_FILE down && \
             docker-compose -f $COMPOSE_FILE up -d --build --force-recreate && \
             docker system prune -af --volumes"

    - name: Verify deployment
      run: |
        ssh -o StrictHostKeyChecking=no \
            ${{ secrets.HETZNER_USER }}@${{ secrets.HETZNER_SERVER_IP }} \
            "echo '--- Running Containers ---' && \
             docker ps -a && \
             echo '--- Backend Health ---' && \
             curl -fsS http://localhost:${{ secrets.PROD_BACKEND_PORT }}/health && \
             echo '--- Frontend Health ---' && \
             curl -fsS http://localhost:${{ secrets.PROD_FRONTEND_PORT }}/health && \
             echo '--- Nginx Health ---' && \
             curl -fsS https://${{ secrets.PROD_DOMAIN }}/health"
