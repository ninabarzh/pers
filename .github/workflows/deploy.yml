# .github/workflows/deploy.yml
name: Deploy to Hetzner

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Docker Compose
      run: |
        curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose

    - name: Create .env file
      run: |
        cat <<EOF > .env
        ENV=production
        DEBUG=false
        TYPESENSE_API_KEY=${{ secrets.PROD_TYPESENSE_API_KEY }}
        TYPESENSE_HOST=${{ secrets.PROD_TYPESENSE_HOST }}
        TYPESENSE_PORT=${{ secrets.PROD_TYPESENSE_PORT }}
        TYPESENSE_PROTOCOL=${{ secrets.PROD_TYPESENSE_PROTOCOL }}
        TYPESENSE_DATA_DIR=/data/typesense
        BACKEND_PORT=8000
        FRONTEND_PORT=8001
        DOMAIN=${{ secrets.PROD_DOMAIN }}
        EOF

    - name: Build containers
      env:
        TYPESENSE_API_KEY: ${{ secrets.PROD_TYPESENSE_API_KEY }}
        TYPESENSE_HOST: ${{ secrets.PROD_TYPESENSE_HOST }}
        TYPESENSE_PORT: ${{ secrets.PROD_TYPESENSE_PORT }}
        TYPESENSE_PROTOCOL: ${{ secrets.PROD_TYPESENSE_PROTOCOL }}
        DOMAIN: ${{ secrets.PROD_DOMAIN }}
      run: |
        docker-compose -f docker-compose.prod.yml build

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.HETZNER_SSH_KEY }}

    - name: Deploy to Hetzner
      run: |
        rsync -avz --delete \
              -e "ssh -o StrictHostKeyChecking=no" \
              . ${{ secrets.HETZNER_USER }}@${{ secrets.HETZNER_SERVER_IP }}:~/app/

        ssh -o StrictHostKeyChecking=no \
            ${{ secrets.HETZNER_USER }}@${{ secrets.HETZNER_SERVER_IP }} \
            "cd ~/app && \
             docker-compose -f docker-compose.prod.yml down && \
             docker-compose -f docker-compose.prod.yml up -d"

    - name: Verify deployment
      run: |
        ssh -o StrictHostKeyChecking=no \
            ${{ secrets.HETZNER_USER }}@${{ secrets.HETZNER_SERVER_IP }} \
            "echo '--- Running Containers ---' && \
             docker ps -a && \
             echo '--- Backend Health ---' && \
             curl -fsS http://localhost:8000/health && \
             echo '--- Frontend Health ---' && \
             curl -fsS http://localhost:8001/health && \
             echo '--- Nginx Health ---' && \
             curl -fsS https://${{ secrets.PROD_DOMAIN }}/health"
