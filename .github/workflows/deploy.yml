# .github/workflows/deploy.yml
name: Deploy to Hetzner

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on semantic version tags (e.g. v1.2.3)

env:
  COMPOSE_FILE: "docker-compose.yml:docker-compose.prod.yml"
  DOMAIN: "${{ secrets.PROD_DOMAIN }}"

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      deployments: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Generate production .env
      run: |
        cat <<EOF > .env.prod
        # Production Environment
        ENV=production
        DEBUG=false

        # Typesense Configuration
        PROD_TYPESENSE_API_KEY=${{ secrets.PROD_TYPESENSE_API_KEY }}
        PROD_TYPESENSE_HOST=${{ secrets.PROD_TYPESENSE_HOST }}
        PROD_TYPESENSE_PORT=${{ secrets.PROD_TYPESENSE_PORT }}
        PROD_TYPESENSE_PROTOCOL=${{ secrets.PROD_TYPESENSE_PROTOCOL }}
        PROD_TYPESENSE_DATA_DIR=${{ secrets.PROD_TYPESENSE_DATA_DIR }}

        # Application Configuration
        PROD_BACKEND_PORT=${{ secrets.PROD_BACKEND_PORT }}
        PROD_FRONTEND_PORT=${{ secrets.PROD_FRONTEND_PORT }}
        DOMAIN=${{ secrets.PROD_DOMAIN }}
        EOF

    - name: Build production images
      run: |
        docker-compose -f $COMPOSE_FILE build --no-cache

    - name: Deploy to Hetzner
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HETZNER_SERVER_IP }}
        username: ${{ secrets.HETZNER_USER }}
        key: ${{ secrets.HETZNER_SSH_KEY }}
        fingerprint: ${{ secrets.HETZNER_SERVER_FINGERPRINT }}
        script: |
          #!/bin/bash
          set -e
          
          # Create required directories
          sudo mkdir -p /data/static /data/typesense
          sudo chown -R 1000:1000 /data
          
          # Transfer files
          rsync -az --delete \
            --exclude=.git \
            --exclude=.github \
            $GITHUB_WORKSPACE/ ${{ secrets.HETZNER_USER }}@${{ secrets.HETZNER_SERVER_IP }}:~/app
          
          # Deploy
          cd ~/app
          docker-compose -f $COMPOSE_FILE pull || true  # Skip if no images exist
          docker-compose -f $COMPOSE_FILE up -d --build --force-recreate
          
          # Cleanup
          docker system prune -af --volumes

    - name: Verify deployment
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HETZNER_SERVER_IP }}
        username: ${{ secrets.HETZNER_USER }}
        key: ${{ secrets.HETZNER_SSH_KEY }}
        script: |
          #!/bin/bash
          set -e
          
          echo "--- Running Containers ---"
          docker ps -a --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
          
          echo "--- Backend Health Check ---"
          curl -fsS "http://localhost:${{ secrets.PROD_BACKEND_PORT }}/health" || exit 1
          
          echo "--- Frontend Health Check ---"
          curl -fsS "http://localhost:${{ secrets.PROD_FRONTEND_PORT }}/health" || exit 1
          
          echo "--- Nginx SSL Check ---"
          curl -fsS "https://${{ secrets.PROD_DOMAIN }}/health" || exit 1