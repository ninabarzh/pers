# .github/workflows/deploy.yml
name: Deploy to Production (Hetzner)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    # ======================
    # SETUP PHASE
    # ======================
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        # Install Docker Compose v2
        mkdir -p ~/.docker/cli-plugins/
        curl -SL https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
        chmod +x ~/.docker/cli-plugins/docker-compose
        docker compose version

    # ======================
    # BUILD PHASE
    # ======================
    - name: Generate production .env
      run: |
        cat <<EOF > .env.prod
        ENV=production
        DEBUG=false
        TYPESENSE_API_KEY=${{ secrets.PROD_TYPESENSE_API_KEY }}
        TYPESENSE_HOST=typesense
        TYPESENSE_PORT=8108
        TYPESENSE_PROTOCOL=http
        TYPESENSE_DATA_DIR=/data/typesense
        BACKEND_PORT=8000
        FRONTEND_PORT=8001
        DOMAIN=${{ secrets.PROD_DOMAIN }}
        EOF

    - name: Build production images
      env:
        TYPESENSE_API_KEY: ${{ secrets.PROD_TYPESENSE_API_KEY }}
      run: |
        docker compose -f docker-compose.prod.yml build

    # ======================
    # DEPLOYMENT PHASE
    # ======================
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.HETZNER_SSH_KEY }}

    - name: Transfer files to server
      run: |
        rsync -avz --delete \
          --exclude='.git' \
          --exclude='.github' \
          -e "ssh -o StrictHostKeyChecking=no" \
          . deploy@${{ secrets.HETZNER_SERVER_IP }}:~/app/

    - name: Deploy application
      run: |
        ssh -o StrictHostKeyChecking=no deploy@${{ secrets.HETZNER_SERVER_IP }} << 'EOF'
        cd ~/app
        docker compose -f docker-compose.prod.yml down
        docker compose -f docker-compose.prod.yml up -d --build
        docker image prune -af
        EOF

    # ======================
    # VERIFICATION PHASE
    # ======================
    - name: Verify deployment
      run: |
        ssh -o StrictHostKeyChecking=no deploy@${{ secrets.HETZNER_SERVER_IP }} << 'EOF'
        echo "=== System Info ==="
        docker --version
        docker compose version
        
        echo "\n=== Running Containers ==="
        docker ps -a --format "table {{.ID}}\t{{.Names}}\t{{.Status}}\t{{.Ports}}"
        
        echo "\n=== Health Checks ==="
        echo "- Backend: $(curl -s http://localhost:8000/health)"
        echo "- Frontend: $(curl -s http://localhost:8001/health)"
        echo "- Nginx: $(curl -sk https://${{ secrets.PROD_DOMAIN }}/health)"
        EOF
