services:
  typesense:
    build:
      context: .
      dockerfile: backend/Dockerfile.typesense
    container_name: typesense-db-dev
    ports:
      - "${TYPESENSE_PORT}:8108"
    environment:
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - TYPESENSE_DATA_DIR=${TYPESENSE_DATA_DIR}
    volumes:
      - typesense-dev-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8108/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - app-network-dev

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: backend-app-dev
    ports:
      - "${BACKEND_PORT}:8000"
    volumes:
      - ./backend/src:/app/src
      - ./backend/tests:/app/tests
    env_file:
      - .env
    environment:
      - PYTHONPATH=${BACKEND_PYTHONPATH}
    depends_on:
      typesense:
        condition: service_healthy
    networks:
      - app-network-dev

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: frontend-app-dev
    ports:
      - "${FRONTEND_PORT}:8001"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/tests:/app/tests
      - ./frontend/src/app/static:/var/www/static
    env_file:
      - .env
    environment:
      - PYTHONPATH=${FRONTEND_PYTHONPATH}
    depends_on:
      - backend
    networks:
      - app-network-dev

  nginx:
    image: nginx:stable-perl
    container_name: nginx-dev
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf
      - ./frontend/src/app/static:/var/www/static
    depends_on:
      - frontend
      - backend
    networks:
      - app-network-dev

  backend-tests:
    profiles: ["test"]
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: backend-tests-dev
    volumes:
      - ./backend/src:/app/src
      - ./backend/tests:/app/tests
    env_file:
      - .env
    environment:
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - TEST_ENV=true
    depends_on:
      typesense:
        condition: service_healthy
      backend:
        condition: service_started
    command: ["./run_tests.sh"]
    networks:
      - app-network-dev

  frontend-tests:
    profiles: ["test"]
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: frontend-tests-dev
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/tests:/app/tests
    env_file:
      - .env
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_started
    command: ["./run_tests.sh"]
    networks:
      - app-network-dev

volumes:
  typesense-dev-data:

networks:
  app-network-dev:
    driver: bridge
