# nginx/Dockerfile.prod
FROM nginx:1.25-alpine

# Install Brotli and verify module paths
RUN apk add --no-cache brotli brotli-libs && \
    mkdir -p /usr/lib/nginx/modules && \
    ln -s /usr/lib/nginx/modules /etc/nginx/modules

# Create user and setup modules
RUN adduser -D -H -u 1001 -s /bin/false deploy && \
    addgroup docker && \
    adduser deploy docker

# Verify module files exist
RUN ls -la /usr/lib/nginx/modules/ngx_http_brotli_*.so

# Create config with module loading
RUN echo "load_module /usr/lib/nginx/modules/ngx_http_brotli_filter_module.so;" > /etc/nginx/nginx.conf && \
    echo "load_module /usr/lib/nginx/modules/ngx_http_brotli_static_module.so;" >> /etc/nginx/nginx.conf &&

# Merge config (appends to existing nginx.conf)
COPY /home/deploy/app/nginx/nginx.prod.conf /etc/nginx/nginx-temp.conf
RUN cat /etc/nginx/nginx-temp.conf >> /etc/nginx/nginx.conf && \
    rm /etc/nginx/nginx-temp.conf && \
    echo "user deploy;" >> /etc/nginx/nginx.conf

# Copy snippets
COPY /home/deploy/app/nginx/snippets/ /etc/nginx/snippets/

# Fix permissions
RUN chown -R deploy:docker /var/cache/nginx /var/log/nginx && \
    chmod -R 775 /var/cache/nginx /var/log/nginx

# Verify config
RUN nginx -t

# Health check config (as non-root)
HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -f http://localhost/ || exit 1

# Runtime user
USER deploy
