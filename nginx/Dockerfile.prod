# nginx/Dockerfile.prod
FROM nginx:1.25-alpine

# 1. Install dependencies
RUN apk add --no-cache curl brotli brotli-libs

# Create user and directories
RUN adduser -D -H -u 1001 -s /bin/false deploy && \
    addgroup docker && \
    adduser deploy docker && \
    mkdir -p /etc/nginx/modules /etc/nginx/snippets

# Download configuration files directly from GitHub
RUN curl -o /etc/nginx/nginx-temp.conf \
    https://raw.githubusercontent.com/pers/main/nginx/nginx.prod.conf && \
    curl -o /etc/nginx/snippets/security-headers.conf \
    https://raw.githubusercontent.com/pers/main/nginx/snippets/security-headers.conf && \
    curl -o /etc/nginx/snippets/ssl-params.conf \
    https://raw.githubusercontent.com/pers/main/nginx/snippets/ssl-params.conf && \
    curl -o /etc/nginx/snippets/proxy-headers.conf \
    https://raw.githubusercontent.com/pers/main/nginx/snippets/proxy-headers.conf && \
    curl -o /etc/nginx/snippets/cors.conf \
    https://raw.githubusercontent.com/pers/main/nginx/snippets/cors.conf

# Set up Brotli modules
RUN echo "load_module /usr/lib/nginx/modules/ngx_http_brotli_filter_module.so;" > /etc/nginx/nginx.conf && \
    echo "load_module /usr/lib/nginx/modules/ngx_http_brotli_static_module.so;" >> /etc/nginx/nginx.conf

# Merge configurations
RUN cat /etc/nginx/nginx-temp.conf >> /etc/nginx/nginx.conf && \
    rm /etc/nginx/nginx-temp.conf && \
    echo "user deploy;" >> /etc/nginx/nginx.conf

# Fix permissions
RUN chown -R deploy:docker /var/cache/nginx /var/log/nginx && \
    chmod -R 775 /var/cache/nginx /var/log/nginx

# Verify config
RUN nginx -t

# Health check
HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -fsS http://localhost/ || exit 1

# Runtime user
USER deploy
